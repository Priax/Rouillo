/*fn main() {
    let mut board = Board::new(6, 12);
    let mut rng = SystemTime::now().duration_since(SystemTime::UNIX_EPOCH).unwrap().as_micros() as u64;
    loop {
        print!("\x1B[2J\x1B[1;1H"); // Clear the terminal
        stdout().flush().unwrap(); // Flush the terminal
        board.display();
        thread::sleep(Duration::from_millis(500)); // Introduce a delay of 500 milliseconds
        let falling = board.tick_gravity();
        if !falling {
            board.check_matches();
            rng = rng.wrapping_mul(1664525).wrapping_add(1013904223); // simple random number generator
            let my_colors = [my_color::Red, my_color::Blue, my_color::Yellow, my_color::Green];
            let my_color1 = &my_colors[(rng as usize) % my_colors.len()];
            let my_color2 = &my_colors[((rng >> 16) as usize) % my_colors.len()];
            board.add_puyos_from_top(3, my_color1.clone(), my_color2.clone());
        }
    }
}*/
